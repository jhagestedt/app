name: ci-main
on:
  push:
    branches:
    - main
jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v2
      with:
        java-version: 11
        distribution: adopt
    - name: version
      run: >-
        APP_SHA=$(git rev-parse --short ${GITHUB_SHA});
        APP_REV=$(git rev-list --tags --max-count=1);
        APP_TAG=$(git describe --tags ${APP_REV} 2> /dev/null || echo 0.0.0);
        APP_VERSION=${APP_TAG}-${APP_SHA};
        echo "APP_SHA=${APP_SHA}" >> ${GITHUB_ENV};
        echo "APP_TAG=${APP_TAG}" >> ${GITHUB_ENV};
        echo "APP_VERSION=${APP_VERSION}" >> ${GITHUB_ENV};
    - name: mvn
      run: >-
        mvn versions:set
        --batch-mode
        --file ./pom.xml
        --settings ./settings.xml
        --define newVersion="${APP_VERSION}";
        mvn clean verify
        --batch-mode
        --file ./pom.xml
        --settings ./settings.xml
        --define app.packages.username="${APP_PACKAGES_USERNAME}"
        --define app.packages.password="${APP_PACKAGES_PASSWORD}";
      env:
        APP_PACKAGES_USERNAME: ${{ env.GITHUB_ACTOR }}
        APP_PACKAGES_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
    - name: docker
      run: >-
        echo "${APP_REGISTRY_PASSWORD}" |
        docker login docker.pkg.github.com
        --username "${APP_REGISTRY_USERNAME}"
        --password-stdin;
        docker build .
        --file Dockerfile
        --tag "${APP_REGISTRY_REPOSITORY}:${APP_VERSION}";
        docker push "${APP_REGISTRY_REPOSITORY}:${APP_VERSION}";
      env:
        APP_REGISTRY_REPOSITORY: docker.pkg.github.com/${{ env.GITHUB_REPOSITORY }}
        APP_REGISTRY_USERNAME: ${{ env.GITHUB_ACTOR }}
        APP_REGISTRY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
